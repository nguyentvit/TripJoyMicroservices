services:
  provincedb:
   image: postgres

  identityredis:
    image: redis

  identitydb:
   image: mcr.microsoft.com/mssql/server

  userdb:
   image: mcr.microsoft.com/mssql/server

  locationdb:
   image: mcr.microsoft.com/mssql/server

  travelplandb:
   image: mcr.microsoft.com/mssql/server
  
  messagebroker:
   image: rabbitmq:management

  provincevietnam.api:
   image: ${DOCKER_REGISTRY-}provincevietnamapi
   build:
    context: .
    dockerfile: Services/ProvinceVietNam/ProvinceVietNam.API/Dockerfile

  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: Services/Identity/Identity.API/Dockerfile
    volumes:
      - ./Certificates:/etc/ssl/certs

  useraccess.api:
    image: ${DOCKER_REGISTRY-}useraccessapi
    build:
      context: .
      dockerfile: Services/UserAccess/UserAccess.API/Dockerfile


  yarpapigateway:
    image: ${DOCKER_REGISTRY-}yarpapigateway
    build:
      context: .
      dockerfile: ApiGateways/YarpApiGateway/Dockerfile
    volumes:
      - ./Certificates:/etc/ssl/certs

  locationattraction.api:
    image: ${DOCKER_REGISTRY-}locationattractionapi
    build:
      context: .
      dockerfile: Services/Location/LocationAttraction.API/Dockerfile

  locationattraction.grpc:
    image: ${DOCKER_REGISTRY-}locationattractiongrpc
    build:
      context: .
      dockerfile: Services/Location/LocationAttraction.Grpc/Dockerfile

  travelplan.api:
    image: ${DOCKER_REGISTRY-}travelplanapi
    build:
      context: .
      dockerfile: Services/TravelPlan/TravelPlan.API/Dockerfile

volumes:
  postgres_province:
  identitydb_data:
  userdb_data:
  locationdb_data:
  travelplandb_data:



