services:
  redis:
    container_name: redis
    restart: always
    ports:
     - "6379:6379"


  messagebroker:
    container_name: messagebroker
    hostname: tripjoy-mq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
 
  userredis:
    container_name: userredis
    restart: always
    ports:
      - "6378:6379"

  sqlserverdb:
    container_name: sqlserverdb
    environment: 
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Nguyenqb242
    restart: always
    ports:
      - "1433:1433"
    volumes:
      - sqlserverdb_data:/var/opt/mssql

  identity.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__Redis=redis:6379
      - ConnectionStrings__DefaultConnection=Server=sqlserverdb,1433;Database=IdentityDb;User Id=sa;Password=Nguyenqb242;TrustServerCertificate=True;
      - PORT=8080
      - ConnectionStrings__SqlConnection=Server=sqlserverdb,1433;Database=IdentityDb;User Id=sa;Password=Nguyenqb242;TrustServerCertificate=True;
    depends_on:
      - redis
      - sqlserverdb
    ports:
      - "6200:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  useraccess.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - PORT=8080
      - ConnectionStrings__Database=Server=sqlserverdb,1433;Database=UserDb;User Id=sa;Password=Nguyenqb242;Encrypt=False;TrustServerCertificate=True
      - ConnectionStrings__Redis=userredis:6379
      - AWS__BucketName=${AWS_BUCKET_NAME}
      - AWS__AccessKey=${AWS_ACCESS_KEY}
      - AWS__SecretKey=${AWS_SECRET_KEY}
      - AWS__Region=${AWS_REGION}
    ports:
      - "6300:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - sqlserverdb
      - userredis

  yarpapigateway:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
    ports:
      - "7000:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - identity.api
      - locationattraction.api
      - useraccess.api
      - travelplan.api

  locationattraction.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__Database=Server=sqlserverdb,1433;Database=LocationDb;User Id=sa;Password=Nguyenqb242;Encrypt=False;TrustServerCertificate=True
    ports:
      - "6400:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - sqlserverdb

  locationattraction.grpc:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__Database=Server=sqlserverdb,1433;Database=LocationDb;User Id=sa;Password=Nguyenqb242;Encrypt=False;TrustServerCertificate=True
    ports:
      - "6500:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - sqlserverdb

  travelplan.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__Database=Server=sqlserverdb,1433;Database=TravelPlanDb;User Id=sa;Password=Nguyenqb242;Encrypt=False;TrustServerCertificate=True
      - AWS__BucketName=${AWS_BUCKET_NAME}
      - AWS__AccessKey=${AWS_ACCESS_KEY}
      - AWS__SecretKey=${AWS_SECRET_KEY}
      - AWS__Region=${AWS_REGION}
    ports:
      - "6600:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - sqlserverdb

  notificationuser.signalr:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__Database=Server=sqlserverdb,1433;Database=NotificationDb;User Id=sa;Password=Nguyenqb242;Encrypt=False;TrustServerCertificate=True
      - ConnectionStrings__Redis=redis:6379
    ports:
      - "6700:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - sqlserverdb
      - redis
      - messagebroker

  chat.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__Database=Server=sqlserverdb,1433;Database=NotificationDb;User Id=sa;Password=Nguyenqb242;Encrypt=False;TrustServerCertificate=True
    ports:
      - "6800:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - sqlserverdb

  postmanagement.api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_HTTP_PORTS=8080
      - ConnectionStrings__Database=Server=sqlserverdb,1433;Database=PostManagement;User Id=sa;Password=Nguyenqb242;Encrypt=False;TrustServerCertificate=True
      - AWS__BucketName=${AWS_BUCKET_NAME}
      - AWS__AccessKey=${AWS_ACCESS_KEY}
      - AWS__SecretKey=${AWS_SECRET_KEY}
      - AWS__Region=${AWS_REGION}
    ports:
      - "6900:8080"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      - sqlserverdb
networks:
  default:
   driver: bridge

