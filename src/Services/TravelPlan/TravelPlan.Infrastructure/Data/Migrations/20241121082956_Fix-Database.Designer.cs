// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelPlan.Infrastructure.Data;

#nullable disable

namespace TravelPlan.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241121082956_Fix-Database")]
    partial class FixDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TravelPlan.Domain.Models.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("EndDate");

                    b.Property<decimal>("EstimatedBudget")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("EstimatedBudget");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Method");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Note");

                    b.Property<Guid>("ProvinceEndId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProvinceStartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("StartDate");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("TravelPlan.Domain.Models.PlanLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocationId");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Note");

                    b.Property<int>("Order")
                        .HasColumnType("int")
                        .HasColumnName("Order");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("PlanLocations");
                });

            modelBuilder.Entity("TravelPlan.Domain.Models.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Provinces");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e143e3e8-e45a-4c5c-8e29-b36c580bf58e"),
                            Name = "An Giang"
                        },
                        new
                        {
                            Id = new Guid("6d2053c0-8d2c-4db7-b8d6-b1d434bf1910"),
                            Name = "Bà Rịa-Vũng Tàu"
                        },
                        new
                        {
                            Id = new Guid("13d46866-d502-4a6c-bc8f-7940ffc2f2ed"),
                            Name = "Bắc Giang"
                        },
                        new
                        {
                            Id = new Guid("70f25dcb-25ae-4e92-af7c-a8abb01fc820"),
                            Name = "Bắc Kạn"
                        },
                        new
                        {
                            Id = new Guid("39c2511d-b6d0-40ec-a2ac-3155d515b166"),
                            Name = "Bạc Liêu"
                        },
                        new
                        {
                            Id = new Guid("df5a5900-c5ab-47c5-9fb9-242a1aadc418"),
                            Name = "Bắc Ninh"
                        },
                        new
                        {
                            Id = new Guid("c16b3363-329e-446c-9715-b00b6508973b"),
                            Name = "Bến Tre"
                        },
                        new
                        {
                            Id = new Guid("88291cc8-db60-4073-9b46-1348afdaf15c"),
                            Name = "Bình Định"
                        },
                        new
                        {
                            Id = new Guid("fa25ed5c-54a9-455a-b90f-864bcd3267ed"),
                            Name = "Bình Dương"
                        },
                        new
                        {
                            Id = new Guid("8d3bf99d-029e-4f08-b531-c6db65eac304"),
                            Name = "Bình Phước"
                        },
                        new
                        {
                            Id = new Guid("9411043c-bfab-4127-8d51-262288fbdafb"),
                            Name = "Bình Thuận"
                        },
                        new
                        {
                            Id = new Guid("0f38548b-5232-4de8-aa07-9c4409ce1bc8"),
                            Name = "Cà Mau"
                        },
                        new
                        {
                            Id = new Guid("5a0fe6c6-61ac-4274-a52f-7c515d22380e"),
                            Name = "Cần Thơ"
                        },
                        new
                        {
                            Id = new Guid("10dc4f00-3631-4cb3-bc50-05dc13de7f49"),
                            Name = "Cao Bằng"
                        },
                        new
                        {
                            Id = new Guid("016c488f-7bc3-4886-92fa-c8c0354cabb3"),
                            Name = "Đà Nẵng"
                        },
                        new
                        {
                            Id = new Guid("89186d5f-1509-4cb8-8759-2fdeed0773da"),
                            Name = "Đắk Lắk"
                        },
                        new
                        {
                            Id = new Guid("b2dee183-872c-42b9-9d93-2e8b2a124481"),
                            Name = "Đắk Nông"
                        },
                        new
                        {
                            Id = new Guid("3f69babb-53a4-4923-a70b-11bee8c4fda8"),
                            Name = "Điện Biên"
                        },
                        new
                        {
                            Id = new Guid("a297a3d4-ad61-4020-b31e-75835edc1418"),
                            Name = "Đồng Nai"
                        },
                        new
                        {
                            Id = new Guid("6ed9a82f-b18a-46cd-938c-fbc71b5966f9"),
                            Name = "Đồng Tháp"
                        },
                        new
                        {
                            Id = new Guid("ab1e3def-0b30-400c-a689-5dfb8ebc551b"),
                            Name = "Gia Lai"
                        },
                        new
                        {
                            Id = new Guid("988e3b42-96ac-428c-bdf8-db0d9a1241f8"),
                            Name = "Hà Giang"
                        },
                        new
                        {
                            Id = new Guid("fa648e13-4134-4fd9-9f27-0a78d9175a69"),
                            Name = "Hà Nam"
                        },
                        new
                        {
                            Id = new Guid("87085a24-469a-4dd5-b541-5fbce8905208"),
                            Name = "Hà Nội"
                        },
                        new
                        {
                            Id = new Guid("bf1f8e6d-fce1-41c3-ae2c-a0fb3cdb288f"),
                            Name = "Hà Tĩnh"
                        },
                        new
                        {
                            Id = new Guid("1c55613d-58a1-443d-83de-e69ef4e13def"),
                            Name = "Hải Dương"
                        },
                        new
                        {
                            Id = new Guid("ad111df5-d20b-4be4-bff2-46285fc899ee"),
                            Name = "Hải Phòng"
                        },
                        new
                        {
                            Id = new Guid("58067018-5f7d-465c-a4fd-a12e7983ca84"),
                            Name = "Hậu Giang"
                        },
                        new
                        {
                            Id = new Guid("404e57a3-090d-4772-b313-a1ffbe1ccd33"),
                            Name = "TP. Hồ Chí Minh"
                        },
                        new
                        {
                            Id = new Guid("495f0339-5fe5-4b3a-b654-132a737ce45b"),
                            Name = "Hòa Bình"
                        },
                        new
                        {
                            Id = new Guid("a951a190-ed2f-44e6-b7d4-e3977fab6b5a"),
                            Name = "Hưng Yên"
                        },
                        new
                        {
                            Id = new Guid("c029f3ba-b0a7-4c6c-9cf2-25a3808c6c49"),
                            Name = "Khánh Hòa"
                        },
                        new
                        {
                            Id = new Guid("6c0101e6-3124-4139-b329-d965bf1951c2"),
                            Name = "Kiên Giang"
                        },
                        new
                        {
                            Id = new Guid("644e8b63-7acb-404b-a28b-52cbce6dc51b"),
                            Name = "Kon Tum"
                        },
                        new
                        {
                            Id = new Guid("cd2030db-f429-4b6e-b828-037beab8739d"),
                            Name = "Lai Châu"
                        },
                        new
                        {
                            Id = new Guid("8e11eaf7-e535-4cb8-953c-2d049ccb4174"),
                            Name = "Lâm Đồng"
                        },
                        new
                        {
                            Id = new Guid("f4f091d4-fc4d-4800-b108-b4823de2ccd3"),
                            Name = "Lạng Sơn"
                        },
                        new
                        {
                            Id = new Guid("a36dddfc-bb29-4c7c-8148-e162d733a0db"),
                            Name = "Lào Cai"
                        },
                        new
                        {
                            Id = new Guid("e8d7cbd7-0437-4476-9b67-57fea056daaa"),
                            Name = "Long An"
                        },
                        new
                        {
                            Id = new Guid("7e3fd972-e3d9-46f5-8344-bf9978d8d90f"),
                            Name = "Nam Định"
                        },
                        new
                        {
                            Id = new Guid("34f202fb-26d5-4103-91ca-16b30c2b04c9"),
                            Name = "Nghệ An"
                        },
                        new
                        {
                            Id = new Guid("71fd1da7-4e30-4d88-b6a4-5a101195411c"),
                            Name = "Ninh Bình"
                        },
                        new
                        {
                            Id = new Guid("336d4327-f1e8-47c3-9116-07cc0cb6fbfb"),
                            Name = "Ninh Thuận"
                        },
                        new
                        {
                            Id = new Guid("70079235-c647-49e4-b0bb-a7979f826a89"),
                            Name = "Phú Thọ"
                        },
                        new
                        {
                            Id = new Guid("673a9f95-1f9a-4e7d-beda-c2725f3f68dc"),
                            Name = "Phú Yên"
                        },
                        new
                        {
                            Id = new Guid("a808525c-c24a-42c9-bdd8-6c4e95596d56"),
                            Name = "Quảng Bình"
                        },
                        new
                        {
                            Id = new Guid("705accf1-47ee-4893-9610-ce1410e672fb"),
                            Name = "Quảng Nam"
                        },
                        new
                        {
                            Id = new Guid("ea5134e9-371a-4770-98f2-8c60c9c5a544"),
                            Name = "Quảng Ngãi"
                        },
                        new
                        {
                            Id = new Guid("07874301-f019-492b-9df4-147cf889f582"),
                            Name = "Quảng Ninh"
                        },
                        new
                        {
                            Id = new Guid("8ee9113e-e87c-4e53-883a-48cc8bb72904"),
                            Name = "Quảng Trị"
                        },
                        new
                        {
                            Id = new Guid("0af64983-3244-400f-a9e9-d6f499ef452f"),
                            Name = "Sóc Trăng"
                        },
                        new
                        {
                            Id = new Guid("bb3271aa-d2c5-4e98-9716-5a627fe819e1"),
                            Name = "Sơn La"
                        },
                        new
                        {
                            Id = new Guid("155c7389-5bcd-463b-81a7-acbd6e212be2"),
                            Name = "Tây Ninh"
                        },
                        new
                        {
                            Id = new Guid("ef9edb29-df85-472e-b601-6978532be853"),
                            Name = "Thái Bình"
                        },
                        new
                        {
                            Id = new Guid("61cc9727-d605-45bd-a742-09dc80eb04ea"),
                            Name = "Thái Nguyên"
                        },
                        new
                        {
                            Id = new Guid("1a13b507-efa6-4113-9f19-670f29d4d931"),
                            Name = "Thanh Hóa"
                        },
                        new
                        {
                            Id = new Guid("312a3b80-657f-4093-890a-9d797f838dcd"),
                            Name = "Thừa Thiên - Huế"
                        },
                        new
                        {
                            Id = new Guid("93f17f3c-8c79-4125-800d-0968f66b51d6"),
                            Name = "Tiền Giang"
                        },
                        new
                        {
                            Id = new Guid("70d48577-9c2e-45e8-bc18-ab98eb8e95d0"),
                            Name = "Trà Vinh"
                        },
                        new
                        {
                            Id = new Guid("097ef89a-83d8-4206-a498-45b91fdcc378"),
                            Name = "Tuyên Quang"
                        },
                        new
                        {
                            Id = new Guid("7125a3b2-dc31-42b2-bd5d-8f39ee3f823a"),
                            Name = "Vĩnh Long"
                        },
                        new
                        {
                            Id = new Guid("e5b223b5-0039-4d3c-96b3-7a7cd9867548"),
                            Name = "Vĩnh Phúc"
                        },
                        new
                        {
                            Id = new Guid("7d41a692-1bde-4cb0-949e-d2f1746447f8"),
                            Name = "Yên Bái"
                        });
                });

            modelBuilder.Entity("TravelPlan.Domain.Models.Plan", b =>
                {
                    b.OwnsMany("TravelPlan.Domain.Entities.PlanInvitation", "PlanInvitations", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlanInvitationId");

                            b1.Property<Guid>("PlanId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("InviteeId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("InviteeId");

                            b1.Property<Guid>("InviterId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("InviterId");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id", "PlanId");

                            b1.HasIndex("PlanId");

                            b1.ToTable("PlanInvitation", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PlanId");
                        });

                    b.OwnsMany("TravelPlan.Domain.Entities.PlanMember", "PlanMembers", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlanMemberId");

                            b1.Property<Guid>("PlanId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("MemberId")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("MemberId");

                            b1.Property<string>("Role")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Role");

                            b1.HasKey("Id", "PlanId");

                            b1.HasIndex("PlanId");

                            b1.ToTable("PlanMember", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PlanId");
                        });

                    b.OwnsMany("TravelPlan.Domain.Entities.PlanVehicle", "PlanVehicles", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlanVehicleId");

                            b1.Property<Guid>("PlanId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Vehicle")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Vehicle");

                            b1.HasKey("Id", "PlanId");

                            b1.HasIndex("PlanId");

                            b1.ToTable("PlanVehicle", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PlanId");
                        });

                    b.OwnsOne("TravelPlan.Domain.ValueObjects.Image", "Avatar", b1 =>
                        {
                            b1.Property<Guid>("PlanId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Avatar");

                            b1.HasKey("PlanId");

                            b1.ToTable("Plans");

                            b1.WithOwner()
                                .HasForeignKey("PlanId");
                        });

                    b.OwnsMany("TravelPlan.Domain.ValueObjects.PlanLocationId", "PlanLocationIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("PlanId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlanLocationId");

                            b1.HasKey("Id");

                            b1.HasIndex("PlanId");

                            b1.ToTable("PlanLocationIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PlanId");
                        });

                    b.Navigation("Avatar");

                    b.Navigation("PlanInvitations");

                    b.Navigation("PlanLocationIds");

                    b.Navigation("PlanMembers");

                    b.Navigation("PlanVehicles");
                });

            modelBuilder.Entity("TravelPlan.Domain.Models.PlanLocation", b =>
                {
                    b.OwnsMany("TravelPlan.Domain.Entities.PlanLocationExpense", "Expenses", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlanLocationExpenseId");

                            b1.Property<Guid>("PlanLocationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)")
                                .HasColumnName("Amount");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Note")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Note");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Title");

                            b1.HasKey("Id", "PlanLocationId");

                            b1.HasIndex("PlanLocationId");

                            b1.ToTable("PlanLocationExpense", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PlanLocationId");
                        });

                    b.OwnsMany("TravelPlan.Domain.Entities.PlanLocationImage", "Images", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlanLocationImageId");

                            b1.Property<Guid>("PlanLocationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime?>("CreatedAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Image")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Image");

                            b1.Property<DateTime?>("LastModified")
                                .HasColumnType("datetime2");

                            b1.Property<string>("LastModifiedBy")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Title");

                            b1.Property<Guid>("UserIdUploaded")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("UserIdUploaded");

                            b1.HasKey("Id", "PlanLocationId");

                            b1.HasIndex("PlanLocationId");

                            b1.ToTable("PlanLocationImage", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("PlanLocationId");
                        });

                    b.Navigation("Expenses");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("TravelPlan.Domain.Models.Province", b =>
                {
                    b.OwnsMany("TravelPlan.Domain.ValueObjects.PlanId", "PlanIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<Guid>("ProvinceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("PlanId");

                            b1.HasKey("Id");

                            b1.HasIndex("ProvinceId");

                            b1.ToTable("PlanIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProvinceId");
                        });

                    b.Navigation("PlanIds");
                });
#pragma warning restore 612, 618
        }
    }
}
